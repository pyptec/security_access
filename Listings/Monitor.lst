C51 COMPILER V9.59.0.0   MONITOR                                                           11/19/2021 16:07:17 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE MONITOR
OBJECT MODULE PLACED IN .\Objects\Monitor.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE Monitor.c LARGE OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\List
                    -ings\Monitor.lst) TABS(2) OBJECT(.\Objects\Monitor.obj)

line level    source

   1          
   2          #include <monitor.h>
   3          #include <reg51.h>
   4          #include <string.h>
   5          
   6          /*variables globales */
   7          extern unsigned char Timer_wait;
   8          extern unsigned char USE_LPR;
   9          extern unsigned char  Debug_Tibbo;
  10          extern unsigned char ValTimeOutCom;   
  11          extern unsigned char Tipo_Vehiculo;
  12          idata unsigned char placa[]={0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0};
  13          
  14          /*configuracion bits*/
  15          
  16          sbit rx_ip = P0^0;  
  17          sbit lock = P1^7;           //Relevo 
  18          
  19          /*externos bits*/
  20          
  21          extern bit placa_ready;
  22          
  23          /*funciones prototipo*/
  24          extern unsigned char rx_Data(void);
  25          extern unsigned char Dir_board();
  26          extern void serie_ascii_siceros_l(unsigned char *serie);
  27          extern void Block_read_clock_ascii(unsigned char *datos_clock);
  28          extern void DebugBufferMF(unsigned char *str,unsigned char num_char,char io);
  29          extern void tx_aux(unsigned char caracter);
  30          extern unsigned char hex_bcd (unsigned char byte);
  31          extern void serie_ascii_siceros_l(unsigned char *serie);
  32          extern unsigned char rd_eeprom (unsigned char control,unsigned int Dir) ;
  33          extern void Debug_monitor(unsigned char *buffer, unsigned char Length_trama );
  34          extern void Debug_txt_Tibbo(unsigned char * str);
  35          extern void Delay_10ms(unsigned int cntd_10ms);
  36          extern void tx_aux(unsigned char caracter);
  37          extern void Debug_chr_Tibbo(unsigned char Dat);
  38          
  39          #define True                    0x01
  40          #define False                   0x00
  41          
  42          #define STX                     02 
  43          #define ETX                     03 
  44          
  45          #define EE_USE_LPR              0x000A
  46          /*------------------------------------------------------------------------------
  47          Rutina q recibe  los cmd de Monitor por el tibbo
  48          return el num de caracteres recibidos
  49          y almacena la trama en un apuntador
  50          ------------------------------------------------------------------------------*/
  51          unsigned char recibe_cmd_Monitor(unsigned char *buffer_cmd)
  52          {
  53   1        unsigned char j, NumDatos,time_out,MaxChrRx;
  54   1        unsigned int contador;
C51 COMPILER V9.59.0.0   MONITOR                                                           11/19/2021 16:07:17 PAGE 2   

  55   1        
  56   1          NumDatos=0;
  57   1          MaxChrRx=11;
  58   1      
  59   1        if (USE_LPR==1)
  60   1        {
  61   2            for (j=0; j<MaxChrRx; j++)
  62   2            {
  63   3              contador=0;
  64   3              time_out=0;
  65   3              while ((rx_ip==1)&&(time_out==0))
  66   3              {
  67   4                contador++;
  68   4                if (contador>65000)
  69   4                {
  70   5                  time_out=1;
  71   5                  j=MaxChrRx;
  72   5                }       
  73   4              }
  74   3              if(time_out==1)break;
  75   3                NumDatos++;
  76   3                *buffer_cmd=rx_Data();
  77   3                  buffer_cmd++;
  78   3            }
  79   2      
  80   2            *buffer_cmd=0;
  81   2            
  82   2      
  83   2        }
  84   1        return  NumDatos;
  85   1      } 
  86          /*------------------------------------------------------------------------------
  87          Rutina q valida los cmd de Monitor
  88          ------------------------------------------------------------------------------*/
  89          
  90          void Valida_Trama_Monitor(unsigned char *buffer, unsigned char length_trama)
  91          {   
  92   1        unsigned char j=0;
  93   1        unsigned char p=2;
  94   1        unsigned char cont=0;
  95   1        unsigned char bcc=0;
  96   1        
  97   1          
  98   1            /*habilita relevo abre barrera*/
  99   1          if  ((*(buffer+1)=='P')&&*(buffer+(length_trama-2))==ETX)                                                                             /* APERTU
             -RA DE BARRETA*/ 
 100   1          {
 101   2            Debug_txt_Tibbo((unsigned char *) "BCC PC MONITOR = ");
 102   2            Debug_chr_Tibbo(*(buffer+length_trama));
 103   2            Debug_txt_Tibbo((unsigned char *) "\n");
 104   2            for (j=0; j<length_trama-1; j++)
 105   2            {
 106   3              bcc=*(buffer+j) ^ bcc;
 107   3            }
 108   2            
 109   2            Debug_txt_Tibbo((unsigned char *) "calculo BCC= ");
 110   2            Debug_chr_Tibbo(bcc);
 111   2            Debug_txt_Tibbo((unsigned char *) "\n");
 112   2            if (bcc == *(buffer+length_trama))
 113   2            {
 114   3                lock=1;   
 115   3                Delay_10ms(70);         /*habilita el relevo ON*/
C51 COMPILER V9.59.0.0   MONITOR                                                           11/19/2021 16:07:17 PAGE 3   

 116   3                tx_aux(06);             //ack             
 117   3                  
 118   3            }
 119   2            else
 120   2            {
 121   3              tx_aux(06);             
 122   3              Debug_txt_Tibbo((unsigned char *) "EERROR REENVIAR trama de apertura ");
 123   3              Debug_txt_Tibbo((unsigned char *) "\n");
 124   3            }
 125   2            
 126   2            
 127   2              
 128   2          }
 129   1            /*se recive la placa O EL CANCEL Y NO_PLATE*/ 
 130   1          else if ((*(buffer+1)=='<')|| (*(buffer+1)=='['))
 131   1          {
 132   2            /*placa 0 el cancel borra la fecha del mensual */
 133   2            do
 134   2            {
 135   3              placa[j]=*(buffer+p);
 136   3              p++;
 137   3              j++;
 138   3            }while ((*(buffer+p) != ETX) && (*(buffer+p) != 0) );
 139   2            *(buffer+p)=0;
 140   2              placa[j-1]=0;
 141   2              placa_ready=1;
 142   2            ValTimeOutCom=10;
 143   2            
 144   2            
 145   2          }
 146   1          
 147   1        
 148   1      }
 149          void clear_placa()
 150          {
 151   1        unsigned char i;
 152   1        for(i=0;i<9;i++)
 153   1        {
 154   2         placa[i]=0x0;
 155   2        }
 156   1         placa_ready=0;
 157   1      }
 158          void Rx_Monitor()
 159          {
 160   1        unsigned char Length_trama;
 161   1        unsigned char buffer1[12];
 162   1          Length_trama=recibe_cmd_Monitor(buffer1);
 163   1          Debug_monitor(buffer1,Length_trama);
 164   1          Valida_Trama_Monitor(buffer1,Length_trama);
 165   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    647    ----
   CONSTANT SIZE    =     69    ----
   XDATA SIZE       =   ----      30
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =      9    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
